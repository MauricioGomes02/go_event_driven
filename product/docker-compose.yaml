services:
  mysql:
    image: mysql
    container_name: database_mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_USERNAME: root
      MYSQL_DATABASE: products
    ports:
      - "3306:3306"
    volumes:
      - ./init:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql
  
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    environment: 
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - zookeeper_data:/var/lib/zookeeper

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092    
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    volumes:
      - kafka_data:/var/lib/kafka/data

  kafka-init:
    image: confluentinc/cp-kafka
    container_name: kafka-init
    depends_on: 
      - kafka
    entrypoint: ["/bin/bash", "-c"]
    command: >
      echo "Aguardando Kafka...";
      sleep 10;
      kafka-topics.sh --create --if-not-exists --topic product.created --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1;
      kafka-topics.sh --list --bootstrap-server kafka:9092;

volumes:
  mysql_data:
    name: mysql_data
  zookeeper_data:
    name: zookeeper_data
  kafka_data:
    name: kafka_data