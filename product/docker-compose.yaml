services:
  mysql:
    image: mysql
    container_name: database_mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_USERNAME: root
      MYSQL_DATABASE: products
    ports:
      - "3306:3306"
    volumes:
      - ./init:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql
  
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    environment: 
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - zookeeper_data:/var/lib/zookeeper

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9094:9094"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9094
    volumes:
      - kafka_data:/var/lib/kafka/data
    command: >
      bash -c "
        /etc/confluent/docker/run & 
        echo 'Aguardando Kafka iniciar...';
        while ! kafka-topics --bootstrap-server kafka:9092 --list >/dev/null 2>&1; do sleep 1; done;
        echo 'Kafka iniciado. Criando t√≥picos...';
        kafka-topics --create --if-not-exists --topic product.created --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1;
        wait
      "
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
      - zookeeper

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9201:9200"  # Porta alterada para evitar conflito
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.0
    container_name: kibana
    ports:
      - "5602:5601"  # Porta alterada para evitar conflito
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.13.0
    container_name: filebeat
    user: root
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
    depends_on:
      - elasticsearch

  app-product-worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    container_name: app_product_worker
    ports:
      - "8081:8080"
    depends_on:
      - mysql
      - kafka
    # environment:

volumes:
  mysql_data:
    name: mysql_data
  zookeeper_data:
    name: zookeeper_data
  kafka_data:
    name: kafka_data
  esdata:
    name: esdata